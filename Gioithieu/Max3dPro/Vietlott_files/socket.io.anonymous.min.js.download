function IZIAnonymousSocket(a,b,c,d){function e(a){g.acts("onAgentStartChat",a)}function f(a){g.acts("onAgentAvailable",a)}c=c||{};var g=this,h=0,i={},j=c.izilog||function(){},k=(c||{}).localdata||new _LocalData,l=a+"/chat/anonymous";const m=new URLSearchParams({engine:"authToken",source:c.source||"",owner_id:b,authorization:toAuthToken(k.localSetting(tokenHeader()))}).toString();j("[IZIRequesterSocket] connect",l,{transports:["websocket"],query:m});var n=io.connect(l,{transports:["websocket"],query:m});this.FuncCode={},this.MsgType={},this.timer={},n.on("disconnect",function(a){try{JSON.parse(a)}catch(a){}}),n.on("error",function(a){j(a)}),n.on("ready",function(a){h++,k.localSetting(tokenHeader(),a.authToken),g.FuncCode=a.FuncCode,1==h?(j("Connected"),(d||function(){})()):(j("Re-Connected"),(this.onReconnected||function(){})())}),n.on("agent",function(a){if(j("Socket[agent]: ",a),a.is_error)return j("Error",a);var b=a.funcCode,c=a.data,d=a.user;b===g.FuncCode.AStartAnonymous?e(d):b===g.FuncCode.AAvailable?f(d):j("No request case:",a,g.FuncCode)}),this.socket=n,this.acts=function(a,b,c,d,e){i[a]=i[a]||[],i[a].forEach(function(a){a(b,c,d,e)})},this.pushListener=function(a,b){i[a]=i[a]||[],i[a].push(b)},this.request=function(a,b,c){c=c||function(){};g.socket.emit("request",{fncName:a,data:b},c||function(){})},this.socket=n}IZIAnonymousSocket.prototype.isConnected=function(){return this.socket.connected};